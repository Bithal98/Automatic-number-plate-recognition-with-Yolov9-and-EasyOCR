# -*- coding: utf-8 -*-
"""Automatic Number Plate Recognition.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13WfyJdhYGbhnAuj4GGUkbontQUBZl-k0
"""

!nvidia-smi

import os
HOME = os.getcwd()
print(HOME)

# Commented out IPython magic to ensure Python compatibility.
!git clone https://github.com/SkalskiP/yolov9.git
# %cd yolov9
!pip install -r requirements.txt -q

!pip install -q roboflow

!wget -P {HOME}/weights -q https://github.com/WongKinYiu/yolov9/releases/download/v0.1/yolov9-c.pt
!wget -P {HOME}/weights -q https://github.com/WongKinYiu/yolov9/releases/download/v0.1/yolov9-e.pt
!wget -P {HOME}/weights -q https://github.com/WongKinYiu/yolov9/releases/download/v0.1/gelan-c.pt
!wget -P {HOME}/weights -q https://github.com/WongKinYiu/yolov9/releases/download/v0.1/gelan-e.pt

!ls -la {HOME}/weights

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}/yolov9



from roboflow import Roboflow
rf = Roboflow(api_key="9XzcLYzpC8cB5P3RpOCW")
project = rf.workspace("bithal").project("anpr2-syxl7-r7mcf")
version = project.version(1)
dataset = version.download("yolov9")

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}/yolov9

!python train.py \
--batch 16 --epochs 25 --img 640 --device 0 --min-items 0 --close-mosaic 15 \
--data {dataset.location}/data.yaml \
--weights {HOME}/weights/gelan-c.pt \
--cfg models/detect/gelan-c.yaml \
--hyp hyp.scratch-high.yaml

!ls {HOME}/yolov9/runs/train/exp4/

from IPython.display import Image

Image(filename=f"{HOME}/yolov9/runs/train/exp4/results.png", width=1000)

from IPython.display import Image

Image(filename=f"{HOME}/yolov9/runs/train/exp4/confusion_matrix.png", width=1000)

from IPython.display import Image

Image(filename=f"{HOME}/yolov9/runs/train/exp4/labels_correlogram.jpg", width=1000)

from IPython.display import Image

Image(filename=f"{HOME}/yolov9/runs/train/exp4/val_batch0_pred.jpg", width=1000)

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}/yolov9

!python val.py \
--img 640 --batch 32 --conf 0.001 --iou 0.7 --device 0 \
--data {dataset.location}/data.yaml \
--weights {HOME}/yolov9/runs/train/exp4/weights/best.pt

!python detect.py \
--img 1280 --conf 0.1 --device 0 \
--weights {HOME}/yolov9/runs/train/exp4/weights/best.pt \
--source {dataset.location}/test/images

import glob

from IPython.display import Image, display

for image_path in glob.glob(f'{HOME}/yolov9/runs/detect/exp/*.jpg')[:2]:
      display(Image(filename=image_path, width=600))

# video

!python detect.py --conf 0.1 --device 0 --weights {HOME}/yolov9/runs/train/exp4/weights/best.pt --source car.mp4

!pip install easyocr

# video

!python anpr.py --conf 0.1 --device 0 --weights {HOME}/yolov9/runs/train/exp4/weights/best.pt --source car.mp4

# video

!python detect.py --conf 0.1 --device 0 --weights {HOME}/yolov9/runs/train/exp4/weights/best.pt --source multicar.mp4

# video

!python anpr.py --conf 0.1 --device 0 --weights {HOME}/yolov9/runs/train/exp4/weights/best.pt --source multicar.mp4

# video

!python detect.py --conf 0.1 --device 0 --weights {HOME}/yolov9/runs/train/exp4/weights/best.pt --source traffic.mp4

# video

!python anpr.py --conf 0.1 --device 0 --weights {HOME}/yolov9/runs/train/exp4/weights/best.pt --source traffic.mp4

